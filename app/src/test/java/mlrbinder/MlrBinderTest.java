/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package mlrbinder;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.Random;
import java.util.logging.Logger;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import mlrbinder.verb.Verb;

class MlrBinderTest {
	private static Logger logger = Logger.getLogger(MlrBinderTest.class.getName());

  static {
		// must set before the Logger
		String path = MlrBinderTest.class.getClassLoader().getResource("logging.properties").getFile();
		System.setProperty("java.util.logging.config.file", path);
	}

	@Test
	void pathTest() {
		String mlrPath = "mlr executable";
		logger.info("mlrPath=" + mlrPath);
		MlrBinder mlr = new MlrBinder().path(mlrPath);
		assertEquals(mlrPath, mlr.getPath());
	}

	@Test
	@DisplayName("added flags order")
	void flagsTest() {
		int cntOfFlags = new Random().nextInt(10);
		logger.info("cntOfFlags=" + cntOfFlags);
		MlrBinder mlr = new MlrBinder();
		for(int i = 0 ; i < cntOfFlags ; i++) {
			Flag flag = new Flag("flag" + i);
			mlr.flag(flag);
			assertEquals(mlr.getFlags().get(i),flag);
		}
	}

	@Test
	@DisplayName("added verbs order")
	void verbsTest() {
		int cntOfVerbs = new Random().nextInt(10);
		logger.info("cntOfVerbs=" + cntOfVerbs);
		MlrBinder mlr = new MlrBinder();
		for(int i = 0 ; i < cntOfVerbs ; i++) {
			Verb verb = new Verb("verb" + i);
			mlr.verb(verb);
			assertEquals(mlr.getVerbs().get(i), verb);
		}
	}

	@Test
	@DisplayName("added files order")
	void filesTest() {
		int cntOfFiles = new Random().nextInt(10);
		logger.info("cntOfFiles=" + cntOfFiles);
		MlrBinder mlr = new MlrBinder();
		for(int i = 0 ; i < cntOfFiles ; i++) {
			String fileName = "file" + i;
			mlr.file(fileName);
			assertEquals(mlr.getFileNames().get(i), fileName);
		}
	}
}
